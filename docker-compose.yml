version: '3.9'
services:
  db:
    build:
      context: ./database/mariadb
      dockerfile: Dockerfile
    env_file:
      - .env  
    ports:
      - "${DB_PORT}:${DB_PORT}"
    environment:
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_LOG_BIN=ON
      - MYSQL_LOG_BIN_TRUST_FUNCTION_CREATORS=ON
      - MYSQL_CHARACTER_SET_SERVER=utf8mb4
      - MYSQL_COLLATION_SERVER=utf8mb4_general_ci
    volumes:
      - ./database/mariadb/db/:/var/lib/mysql   
    networks:
      - backend

  
  qdrant:
    image: qdrant/qdrant:v1.9.6
    container_name: qdrant
    ports:
      - "6333:6333"
    volumes:
      - ./database/qdrant/qdrant_data:/qdrant/storage
    networks:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      - db
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    volumes:
      - ./.env:/app/.env
    networks:
      - backend

  adminer:
    image: adminer
    ports:
      - 8080:8080
    links:
      - db
    networks:
      - backend

  chatbot:
    build:
      context: ./genai_application
      dockerfile: Dockerfile 
    env_file:
        - .env
    depends_on:
      - qdrant
      - backend
    ports:
      - "8000:8000"  
    volumes:
      - ./genai_application:/opt/app
    networks:
      - backend

  nginx:
    build:
      context: "./nginx"
      dockerfile: "Dockerfile"
    depends_on:
      - backend
      - adminer
    ports:
      - "${NGINX_PORT}:${NGINX_PORT}"
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - backend    

networks:
  backend:
    driver: bridge